#!/usr/bin/python3
import re
import subprocess

import helpers

def parse_evolution(server_output):
    """Parses /evolution output generated by factorio server. Output example:
    Evolution factor: 0.7932. (Time 13%) (Pollution 61%) (Spawner kills 25%)
    """
    regex = re.compile("Evolution factor: ([\d\.]+)\. \(Time (\d+%)\) \(Pollution (\d+%)\) \(Spawner kills (\d+%)\)")
    match = regex.match(server_output)
    if not match:
        return None

    return {
        'evolution': match.group(1),
        'percentage_time': match.group(2),
        'percentage_pollution': match.group(3),
        'percentage_spawner_kills': match.group(4),
    }

def get_server_output():
    command = 'sudo /opt/factorio-init/factorio cmd -o /evolution'.split(' ')
    process = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True, check=False)
    if process.returncode != 0:
        raise Exception(f"Error reading factorio evolution - error code {process.returncode}, stderr: '{process.stderr.strip()}', stdout: '{process.stdout.strip()}'")
    return process.stdout.strip()


try:
    server_output = get_server_output()
except Exception as e:
    helpers.exit_with_CRITICAL(e)

evolution = parse_evolution(server_output)
if evolution == None:
    helpers.exit_with_CRITICAL(f"unable to parse server output '{server_output}'")

formatted_metrics = " ".join([ f"'{name}'={value}" for name,value in evolution.items() ])

helpers.exit_with_OK(f"{server_output} | {formatted_metrics}")
